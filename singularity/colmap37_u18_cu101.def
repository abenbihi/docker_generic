Bootstrap: docker
From: nvidia/cuda:10.1-devel-ubuntu18.04
#From: nvidia/cudagl:11.3.1-devel-ubuntu20.04

%post
apt-get -y update && apt-get -y install --no-install-recommends \
    build-essential \
    cmake \
    git \
    gfortran \
    htop \
    libavcodec-dev \
    libavformat-dev \
    libatlas-base-dev \
    libboost-program-options-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-regex-dev \
    libboost-system-dev \
    libboost-test-dev \
    libcgal-dev \
    libcgal-qt5-dev \
    libdc1394-22-dev \
    libeigen3-dev \
    libfreeimage-dev \
    libgflags-dev \
    libglew-dev \
    libgoogle-glog-dev \
    libgtk2.0-dev \
    libjpeg-dev \
    libsuitesparse-dev \
    libswscale-dev \
    libtbb2 \
    libtbb-dev \
    libtiff-dev \
    libqt5opengl5-dev \
    pkg-config \
    python3-dev \
    python3-numpy \
    python3-dev \
    python3-numpy \
    python3-pip \
    python3-setuptools \
    qtbase5-dev \
    unzip \
    vim \
    wget && \
    rm -rf /var/lib/apt/lists/*

# Eigen
wget https://gitlab.com/libeigen/eigen/-/archive/3.3.4/eigen-3.3.4.zip && \
unzip eigen-3.3.4.zip && \
cd eigen-3.3.4 && \
mkdir build && \
cd build && \
cmake .. && \
make install && \
make clean

# Build and install ceres solver
git clone https://github.com/ceres-solver/ceres-solver.git --branch 1.14.0 && \
cd ceres-solver && \
mkdir build && \
cd build && \
cmake .. -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF && \
make -j8 && \
make install && \
make clean

# Build and install COLMAP
# Note: This Dockerfile has been tested using COLMAP pre-release 3.6-dev.3.
# Later versions of COLMAP (which will be automatically cloned as default) may
# have problems using the environment described thus far. If you encounter
# problems and want to install the tested release, then uncomment the branch
# specification in the line below
git clone https://github.com/colmap/colmap.git && \
cd colmap && \
git checkout 3.7 && \
mkdir build && \
cd build && \
cmake .. && \
make -j8 && \
make install && \
make clean

# Nabo
git clone https://github.com/ethz-asl/libnabo.git libnabo && \
cd libnabo && \
mkdir build && \
cd build && \
cmake .. -DUSE_OPEN_MP=False && \
make && \
make install && \
make clean

pip3 install --upgrade pip && \
pip3 --no-cache-dir install \
  Cython==0.29.3 \
  numpy==1.19.5 \
  scipy==1.5.4 \
  scikit-image==0.15.0 \
  pyjson \
  h5py==2.10.0 \
  open3d==0.15.2 \
  leveldb>=0.191 \
  opencv-python==3.4.10.37 \
  opencv-contrib-python==3.4.10.37 \
  pyquaternion \
  tqdm==4.64.1 \
